<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.codingevents.EventRepositoryTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2023-03-03T19:32:47" hostname="LUKES-LAPTOP" time="2.522">
  <properties/>
  <testcase name="testDeleteEvent()" classname="com.example.codingevents.EventRepositoryTest" time="0.577"/>
  <testcase name="testCreateEvent()" classname="com.example.codingevents.EventRepositoryTest" time="0.559"/>
  <testcase name="testCountEvents()" classname="com.example.codingevents.EventRepositoryTest" time="1.378"/>
  <system-out><![CDATA[14:32:38.587 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [EventRepositoryTest]: using SpringBootContextLoader
14:32:38.595 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.codingevents.EventRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:32:38.596 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.codingevents.EventRepositoryTest]: EventRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:32:38.663 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using ContextCustomizers for test class [EventRepositoryTest]: [DisableAutoConfigurationContextCustomizer, DisableObservabilityContextCustomizer, TypeExcludeFiltersContextCustomizer, PropertyMappingContextCustomizer, Customizer, ImportsContextCustomizer, ExcludeFilterContextCustomizer, DuplicateJsonObjectContextCustomizer, MockitoContextCustomizer]
14:32:38.764 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\cluke\Desktop\Git\fp-sim7-rhythm-bytes\build\classes\java\main\com\example\codingevents\CodingEventsApplication.class]
14:32:38.769 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.codingevents.CodingEventsApplication for test class com.example.codingevents.EventRepositoryTest
14:32:38.816 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using TestExecutionListeners for test class [EventRepositoryTest]: [ServletTestExecutionListener, DirtiesContextBeforeModesTestExecutionListener, ApplicationEventsTestExecutionListener, MockitoTestExecutionListener, DependencyInjectionTestExecutionListener, DirtiesContextTestExecutionListener, TransactionalTestExecutionListener, SqlScriptsTestExecutionListener, EventPublishingTestExecutionListener, RestDocsTestExecutionListener, MockRestServiceServerResetTestExecutionListener, MockMvcPrintOnlyOnFailureTestExecutionListener, WebDriverTestExecutionListener, MockWebServiceServerTestExecutionListener, ResetMocksTestExecutionListener]
14:32:38.819 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: class [EventRepositoryTest], class annotated with @DirtiesContext [false] with mode [null]
14:32:38.851 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test class com.example.codingevents.EventRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.2)

2023-03-03T14:32:39.343-05:00  INFO 12884 --- [    Test worker] c.e.codingevents.EventRepositoryTest     : Starting EventRepositoryTest using Java 17 with PID 12884 (started by cluke in C:\Users\cluke\Desktop\Git\fp-sim7-rhythm-bytes)
2023-03-03T14:32:39.346-05:00  INFO 12884 --- [    Test worker] c.e.codingevents.EventRepositoryTest     : No active profile set, falling back to 1 default profile: "default"
2023-03-03T14:32:39.806-05:00  INFO 12884 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03T14:32:39.878-05:00  INFO 12884 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 58 ms. Found 1 JPA repository interfaces.
2023-03-03T14:32:40.297-05:00  INFO 12884 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03T14:32:40.390-05:00  INFO 12884 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.6.Final
2023-03-03T14:32:40.665-05:00  WARN 12884 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2023-03-03T14:32:40.841-05:00  INFO 12884 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-03T14:32:45.858-05:00  INFO 12884 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10131289
2023-03-03T14:32:45.861-05:00  INFO 12884 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-03T14:32:45.887-05:00  INFO 12884 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-03T14:32:45.888-05:00  WARN 12884 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-03-03T14:32:47.297-05:00  INFO 12884 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03T14:32:47.317-05:00  INFO 12884 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03T14:32:47.870-05:00  INFO 12884 --- [    Test worker] c.e.codingevents.EventRepositoryTest     : Started EventRepositoryTest in 8.954 seconds (process running for 10.737)
Hibernate: select e1_0.id,e1_0.company,e1_0.contact_email,e1_0.description,e1_0.image_link,e1_0.linkedin,e1_0.name,e1_0.title,e1_0.type from event e1_0 where e1_0.id=?
Hibernate: select next_val as id_val from event_seq for update
Hibernate: update event_seq set next_val= ? where next_val=?
Hibernate: insert into event (company, contact_email, description, image_link, linkedin, name, title, type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select e1_0.id,e1_0.company,e1_0.contact_email,e1_0.description,e1_0.image_link,e1_0.linkedin,e1_0.name,e1_0.title,e1_0.type from event e1_0
Hibernate: delete from event where id=?
Hibernate: select count(*) from event e1_0
Hibernate: insert into event (company, contact_email, description, image_link, linkedin, name, title, type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into event (company, contact_email, description, image_link, linkedin, name, title, type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select count(*) from event e1_0
Hibernate: insert into event (company, contact_email, description, image_link, linkedin, name, title, type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into event (company, contact_email, description, image_link, linkedin, name, title, type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into event (company, contact_email, description, image_link, linkedin, name, title, type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select count(*) from event e1_0
Hibernate: delete from event where id=?
Hibernate: select count(*) from event e1_0
Hibernate: select e1_0.id,e1_0.company,e1_0.contact_email,e1_0.description,e1_0.image_link,e1_0.linkedin,e1_0.name,e1_0.title,e1_0.type from event e1_0
Hibernate: delete from event where id=?
Hibernate: delete from event where id=?
Hibernate: delete from event where id=?
Hibernate: delete from event where id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
